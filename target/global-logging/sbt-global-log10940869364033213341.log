[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.6 (Ubuntu Java 11.0.20.1)
[debug]       Load.loadUnit: plugins took 257.13102ms
[debug]       Load.loadUnit: defsScala took 0.601648ms
[debug] [Loading] Scanning directory /home/knoldus/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/knoldus/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 40.827282 ms
[debug]           Load.resolveProject(global-plugins) took 221.683706ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /home/knoldus/.sbt/1.0/plugins, plugins: List(<none>))) took 321.440208ms
[debug] [Loading] Done in /home/knoldus/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 366.50879ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.653663ms
[debug]     Load.loadUnit(file:/home/knoldus/.sbt/1.0/plugins/, ...) took 644.317165ms
[debug]   Load.apply: load took 1571.241018ms
[debug]   Load.apply: resolveProjects took 25.715062ms
[debug]   Load.apply: finalTransforms took 578.395545ms
[debug]   Load.apply: config.delegates took 58.385701ms
[debug]   Load.apply: Def.make(settings)... took 1958.8166ms
[debug]   Load.apply: structureIndex took 642.733332ms
[debug]   Load.apply: mkStreams took 4.049669ms
[info] loading global plugins from /home/knoldus/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 9009.240433ms
[debug]           Load.loadUnit: plugins took 43.559638ms
[debug]           Load.loadUnit: defsScala took 0.012464ms
[debug] [Loading] Scanning directory /home/knoldus/Desktop/Delta Open Sharing/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/knoldus/Desktop/Delta Open Sharing/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.703321 ms
[debug]               Load.resolveProject(delta-open-sharing-build) took 3.054581ms
[debug]             Load.loadTransitive: finalizeProject(Project(id delta-open-sharing-build, base: /home/knoldus/Desktop/Delta Open Sharing/project, plugins: List(<none>))) took 10.076769ms
[debug] [Loading] Done in /home/knoldus/Desktop/Delta Open Sharing/project, returning: (delta-open-sharing-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 13.670622ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.030313ms
[debug]         Load.loadUnit(file:/home/knoldus/Desktop/Delta%20Open%20Sharing/project/, ...) took 58.878096ms
[debug]       Load.apply: load took 62.447518ms
[debug]       Load.apply: resolveProjects took 0.298321ms
[debug]       Load.apply: finalTransforms took 38.618204ms
[debug]       Load.apply: config.delegates took 1.229169ms
[debug]       Load.apply: Def.make(settings)... took 324.325912ms
[debug]       Load.apply: structureIndex took 121.042378ms
[debug]       Load.apply: mkStreams took 0.0049ms
[info] loading project definition from /home/knoldus/Desktop/Delta Open Sharing/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1599.550076ms
[debug]     Load.loadUnit: defsScala took 0.01466ms
[debug] [Loading] Scanning directory /home/knoldus/Desktop/Delta Open Sharing
[debug]       Load.loadUnit: mkEval took 26.144149ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.464209 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 4.976329ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: /home/knoldus/Desktop/Delta Open Sharing, plugins: List(<none>))) took 11.422014ms
[debug] [Loading] Done in /home/knoldus/Desktop/Delta Open Sharing, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 5881.105561ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.689736ms
[debug]   Load.loadUnit(file:/home/knoldus/Desktop/Delta%20Open%20Sharing/, ...) took 7490.809644ms
[debug] Load.apply: load took 7494.15273ms
[debug] Load.apply: resolveProjects took 0.247774ms
[debug] Load.apply: finalTransforms took 22.982639ms
[debug] Load.apply: config.delegates took 0.831413ms
[debug] Load.apply: Def.make(settings)... took 211.686254ms
[debug] Load.apply: structureIndex took 60.047063ms
[debug] Load.apply: mkStreams took 0.005263ms
[info] set current project to Delta Open Sharing (in build file:/home/knoldus/Desktop/Delta%20Open%20Sharing/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///home/knoldus/.sbt/1.0/server/e5c90e0708a30e4dc5ec/sock
[debug] Writing bsp connection file
[info] started sbt server
